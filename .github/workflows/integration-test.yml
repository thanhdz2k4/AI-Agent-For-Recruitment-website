name: Integration Tests

on:
  workflow_run:
    workflows: ["Unit Tests"]
    types:
      - completed
    branches: [ main, develop ]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('AI Agent for recruitment website/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd "AI Agent for recruitment website"
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}/AI Agent for recruitment website/backend" >> $GITHUB_ENV

    - name: Setup Ollama for integration tests
      run: |
        # Download and install Ollama
        curl -fsSL https://ollama.ai/install.sh | sh
        
        # Start Ollama in background
        ollama serve &
        
        # Wait for service to be ready
        sleep 10
        
        # Pull a small model for testing
        ollama pull tinyllama:latest

    - name: Run integration tests
      run: |
        cd "AI Agent for recruitment website"
        python -m pytest backend/test/integration/llms/test.py -v --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}/AI Agent for recruitment website/backend

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: integration-test-results
        path: |
          AI Agent for recruitment website/backend/test/integration/
