name: CI/CD Pipeline
permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: tthanhhh/ai_agent_for_recruitment_website

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('AI Agent for recruitment website/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd "AI Agent for recruitment website"
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=${{ github.workspace }}/AI Agent for recruitment website/backend" >> $GITHUB_ENV

    - name: Run unit tests
      run: |
        cd "AI Agent for recruitment website"
        python -m pytest backend/test/unit/llms/test.py -v --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}/AI Agent for recruitment website/backend

    - name: Setup Ollama for integration tests
      run: |
        # Download and install Ollama
        curl -fsSL https://ollama.ai/install.sh | sh
        
        # Start Ollama in background
        ollama serve &
        
        # Wait for service to be ready
        sleep 10
        
        # Pull a small model for testing
        ollama pull tinyllama:latest

    - name: Run integration tests
      run: |
        cd "AI Agent for recruitment website"
        python -m pytest backend/test/integration/llms/test.py -v --tb=short
      env:
        PYTHONPATH: ${{ github.workspace }}/AI Agent for recruitment website/backend

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          AI Agent for recruitment website/backend/test/

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: ./AI Agent for recruitment website
        file: ./AI Agent for recruitment website/Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.IMAGE_NAME }}
        subject-digest: ${{ steps.build.outputs.digest }}
        push-to-registry: false

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy notification
      run: |
        echo "ðŸš€ Application successfully built and pushed!"
        echo "ðŸ“¦ Image: ${{ env.IMAGE_NAME }}:latest"
        echo "ðŸ”— Available at: https://hub.docker.com/r/tthanhhh/ai_agent_for_recruitment_website"
